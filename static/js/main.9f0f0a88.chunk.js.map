{"version":3,"sources":["Header.jsx","item.jsx","Items.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","onClick","Typography","variant","style","textAlign","opacity","display","marginTop","TextField","value","type","placeholder","flex","autoComplete","Button","color","React","Component","Item","deleteButtonOnClick","bind","changeType","name","itemStyle","textDecoration","item","parseFloat","margin","component","oneItem","message","Items","state","items","map","index","key","deleteOneItem","App","handleInput","addState","handleChangeType","e","setState","target","splice","event","console","log","width","onChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f0f0a88.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        const { onClick, ...props } = this.props;   \r\n        const itemStyle = {\r\n            flex : '0.9' ,\r\n            autoComplete : 'off' ,\r\n        } ;\r\n        return (\r\n            <header >\r\n                <Typography variant=\"h3\" style = {{textAlign : 'center' , opacity : '0.7' }} >ToDo List</Typography>\r\n                <Typography variant=\"h6\" style = {{textAlign : 'center' , opacity : '0.7' }} >My first project by React and Material-UI</Typography>\r\n                <div style = {{display : 'flex' , marginTop : '50px'}} >\r\n                    <TextField value = { this.props.value } type=\"text\" {...props} placeholder = {'ADD your task...'} style = {itemStyle} />\r\n                    <Button color = {'secondary'} onClick = {onClick} style = {{flex : '0.1' }} >Add...</Button>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header ;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Filled from '@material-ui/icons/Delete' ;\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props){\r\n        super(props) ;\r\n        this.deleteButtonOnClick = this.deleteButtonOnClick.bind( this ) ;\r\n        this.changeType = this.changeType.bind( this ) ;\r\n    }\r\n\r\n    deleteButtonOnClick() {\r\n        this.props.deleteButtonOnClick(this.props.name) ;\r\n    }\r\n\r\n    changeType() {\r\n        this.props.onClick( this.props.name );\r\n    }\r\n\r\n    render() {\r\n        const itemStyle = {\r\n            textDecoration : this.props.item[parseFloat(this.props.name)].type ? null : 'line-through' ,\r\n            flex : '0.9' ,\r\n        }\r\n        return (\r\n            <div \r\n                style = {{display : 'flex' , margin : '10px 0'}}\r\n            >\r\n                <div\r\n                    onClick = {this.changeType}\r\n                    style = {itemStyle}\r\n                >\r\n                    <Typography component=\"span\">\r\n                        { this.props.oneItem.message}\r\n                    </Typography>\r\n                </div>\r\n                <Button \r\n                    onClick = { this.deleteButtonOnClick } \r\n                    name = {this.props.name} \r\n                    style = {{flex : '0.1'}}\r\n                    color = {'secondary'}\r\n                >\r\n                    <Filled>\r\n                    </Filled>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item ;","import React from 'react';\r\nimport Item from './item' ;\r\n\r\nclass Items extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.props.state.items.map( ( item , index ) => {\r\n                    return ( <Item oneItem = { item } name = {`00${index}`} key = {`00${index}`} deleteButtonOnClick = {this.props.deleteOneItem} onClick = {this.props.changeType} item = {this.props.state.items} /> )\r\n                } ) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items ;","import React from 'react';\nimport './App.css';\nimport Header from './Header' ;\nimport Items from './Items' ;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props) ;\n    this.handleInput = this.handleInput.bind( this ) ;\n    this.addState = this.addState.bind( this ) ;\n    this.deleteOneItem =  this.deleteOneItem.bind( this ) ;\n    this.handleChangeType = this.handleChangeType.bind( this ) ;\n    this.state = {\n      items : [] ,\n      message: '' ,\n    } ;\n  }\n\n  handleInput(e) {\n    this.setState( {\n      message : e.target.value ,\n    } ) ;\n  }\n  \n  addState() {\n    if ( this.state.message === '' ) {\n      return null ;\n    }\n    this.setState( (state)=>{\n      return {\n        items : [ ...state.items , { message : state.message , type : true } ] ,\n        message : '' ,\n      }\n    } ) ;\n  }\n\n  deleteOneItem( index ) {\n    this.setState( ( state ) => {\n      state.items.splice( parseFloat(index) , 1 ) ;\n      return state.items ;\n    } ) ;\n  }\n\n  handleChangeType(event) { \n    this.setState( (state) => { debugger ;\n      state.items[parseFloat(event)].type = !state.items[parseFloat(event)].type ;\n      return state ;\n    } ) ;\n  }\n\n  render() {\n    console.log( this.state ) ;\n    const conteiner = {\n      width : '700px' ,\n      margin : '20px auto' ,\n    }\n    return (\n      <div style = {conteiner} >\n        <Header onChange = {this.handleInput} onClick = {this.addState} value = {this.state.message} />\n        <Items state = {this.state} deleteOneItem = { this.deleteOneItem } changeType = {this.handleChangeType} />\n      </div>\n    )\n  }\n}\n\nexport default App ;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}